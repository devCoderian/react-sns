{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  id: 1,\n  nickname: '정이안',\n  Posts: [],\n  Followings: [],\n  Followers: []\n});\n\nexport const initialState = {\n  loginLoading: false,\n  //로그인 시도중\n  loginDone: false,\n  //로그아웃 시도중\n  loginError: false,\n  logoutLoading: false,\n  //로그인 시도중\n  logoutDone: false,\n  logoutError: false,\n  //로그아웃 시도중\n  signupLoading: false,\n  //로그인 시도중\n  signupDone: false,\n  signupError: false,\n  //로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const signupRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        console.log('reducer login');\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loginLoading: true,\n          loginError: null,\n          loginDone: false\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loginLoading: false,\n          loginDone: true,\n          me: dummyUser(action.data)\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loginLoading: false,\n          loginError: action.error\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logoutLoading: true,\n          logoutDone: false,\n          logoutError: null\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logoutLoading: false,\n          logoutDone: true,\n          me: null\n        });\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logoutLoading: false,\n          logoutError: action.error\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signupLoading: true,\n          logoutDone: false,\n          logoutError: null\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logoutLoading: false,\n          logoutDone: true,\n          me: null\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logoutLoading: false,\n          logoutError: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n}); // 사가 적용 전\n// export const loginAction = (data) => {\n//   return {\n//     type: LOG_IN,\n//     data,\n//   }\n// };\n// export const logoutAction = {\n//   type: LOG_OUT,\n// };\n// export const signUp = (data) => {\n//   return {\n//     type: SIGN_UP_REQUEST,\n//     data,\n//   }\n// };\n// export const signUpAction = (data) => {\n//   return {\n//     type: SIGN_UP_REQUEST,\n//     data,\n//   };\n// };\n// export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case LOG_IN: {\n//       return {\n//         ...state,\n//         isLoggedIn: true,\n//         me: action.data,\n//       };\n//     }\n//     case LOG_OUT: {\n//       return {\n//         ...state,\n//         isLoggedIn: false,\n//         me: null,\n//       };\n//     }\n//     case SIGN_UP: {\n//       return {\n//         ...state,\n//         signUpData: action.data,\n//       };\n//     }\n//     default: {\n//       return {\n//         ...state,\n//       }\n//     }\n//   }\n// };","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/reducers/user.js"],"names":["dummyUser","data","id","nickname","Posts","Followings","Followers","initialState","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","signupLoading","signupDone","signupError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","signupRequestAction","type","loginRequestAction","logoutRequestAction","state","action","console","log","error"],"mappings":"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","sourcesContent":["const dummyUser =(data) => ({\r\n    ...data,\r\n    id: 1,\r\n    nickname: '정이안',\r\n    Posts: [],\r\n    Followings: [],\r\n    Followers: [],\r\n  });\r\n  \r\n  export const initialState = {\r\n    loginLoading: false, //로그인 시도중\r\n    loginDone: false, //로그아웃 시도중\r\n    loginError: false,\r\n   \r\n    logoutLoading: false, //로그인 시도중\r\n    logoutDone: false,\r\n    logoutError: false, //로그아웃 시도중\r\n\r\n    signupLoading: false, //로그인 시도중\r\n    signupDone: false,\r\n    signupError: false, //로그아웃 시도중\r\n\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n  };\r\n  \r\n  export const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\n  export const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\n  export const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\n\r\n  export const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\n  export const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\n  export const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\n  export const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\n  export const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\n  export const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\n  export const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\n  export const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\n  export const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\n  export const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\n  export const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\n  export const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\n\r\n  export const signupRequestAction = (data) =>({\r\n    type: SIGN_UP_REQUEST,\r\n    data,\r\n  })\r\n\r\n  export const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  });\r\n  \r\n  export const logoutRequestAction = () => ({\r\n    type: LOG_OUT_REQUEST,\r\n  });\r\n\r\n \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case LOG_IN_REQUEST: {\r\n        console.log('reducer login')\r\n        return {\r\n          ...state,\r\n          loginLoading: true,\r\n          loginError: null,\r\n          loginDone: false\r\n        };\r\n      }\r\n      case LOG_IN_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          loginLoading: false,\r\n          loginDone: true,\r\n          me: dummyUser(action.data)\r\n        };\r\n      }\r\n      case LOG_IN_FAILURE: {\r\n        return {\r\n          ...state,\r\n          loginLoading: false,\r\n          loginError: action.error,\r\n        };\r\n      }\r\n      case LOG_OUT_REQUEST: {\r\n        return {\r\n          ...state,\r\n          logoutLoading: true,\r\n          logoutDone: false,\r\n          logoutError: null,\r\n        };\r\n      }\r\n      case LOG_OUT_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          logoutLoading: false,\r\n          logoutDone: true,\r\n          me: null\r\n        };\r\n      }\r\n      case LOG_OUT_FAILURE: {\r\n        return {\r\n          ...state,\r\n          logoutLoading: false,\r\n          logoutError: action.error,\r\n        };\r\n      }\r\n      case SIGN_UP_REQUEST: {\r\n        return {\r\n          ...state,\r\n          signupLoading: true,\r\n          logoutDone: false,\r\n          logoutError: null,\r\n        };\r\n      }\r\n      case SIGN_UP_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          logoutLoading: false,\r\n          logoutDone: true,\r\n          me: null\r\n        };\r\n      }\r\n      case SIGN_UP_FAILURE: {\r\n        return {\r\n          ...state,\r\n          logoutLoading: false,\r\n          logoutError: action.error,\r\n        };\r\n      }\r\n      default: {\r\n        return {\r\n          ...state,\r\n        }\r\n      }\r\n    }\r\n  }; \r\n\r\n\r\n  // 사가 적용 전\r\n  // export const loginAction = (data) => {\r\n  //   return {\r\n  //     type: LOG_IN,\r\n  //     data,\r\n  //   }\r\n  // };\r\n  // export const logoutAction = {\r\n  //   type: LOG_OUT,\r\n  // };\r\n\r\n\r\n  \r\n  // export const signUp = (data) => {\r\n  //   return {\r\n  //     type: SIGN_UP_REQUEST,\r\n  //     data,\r\n  //   }\r\n  // };\r\n\r\n  // export const signUpAction = (data) => {\r\n  //   return {\r\n  //     type: SIGN_UP_REQUEST,\r\n  //     data,\r\n  //   };\r\n  // };\r\n\r\n  // export default (state = initialState, action) => {\r\n  //   switch (action.type) {\r\n  //     case LOG_IN: {\r\n  //       return {\r\n  //         ...state,\r\n  //         isLoggedIn: true,\r\n  //         me: action.data,\r\n  //       };\r\n  //     }\r\n  //     case LOG_OUT: {\r\n  //       return {\r\n  //         ...state,\r\n  //         isLoggedIn: false,\r\n  //         me: null,\r\n  //       };\r\n  //     }\r\n  //     case SIGN_UP: {\r\n  //       return {\r\n  //         ...state,\r\n  //         signUpData: action.data,\r\n  //       };\r\n  //     }\r\n  //     default: {\r\n  //       return {\r\n  //         ...state,\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };"]},"metadata":{},"sourceType":"module"}