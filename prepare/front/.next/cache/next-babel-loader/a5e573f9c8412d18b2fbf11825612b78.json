{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\goman\\\\Desktop\\\\react-sns\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  // const [commentText, setCommentText] = useState('');\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      setCommentText = _useInput2[1];\n\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  });\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"jI0AOC6cMIhlhs1lmUdvTpANcMk=\", true, function () {\n  return [useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","PropTypes","useSelector","CommentForm","post","id","state","user","me","useInput","commentText","setCommentText","onChangeCommentText","e","target","value","onSubmitComment","console","log","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC5B;AACA,MAAMC,EAAE,GAAGH,WAAW,CAAC,UAACI,KAAD;AAAA;;AAAA,6BAAUA,KAAK,CAACC,IAAN,CAAWC,EAArB,mDAAU,eAAeH,EAAzB;AAAA,GAAD,CAAtB;;AACA,kBAAsCI,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,mBAAmB,GAAGb,WAAW,CAAC,UAACc,CAAD,EAAK;AACzCF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,CAAvC;AAGA,MAAMC,eAAe,GAAGjB,WAAW,CAC/B,YAAM;AACFkB,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,EAAjB,EAAqBK,WAArB;AACH,GAH8B,EAI/B,CAACA,WAAD,CAJ+B,CAAnC;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,eAAhB;AAAA,2BACK,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACG,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEV,WAAhC;AAA6C,QAAA,QAAQ,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,eADH,eAEG,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEO,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CApBD;;GAAMnB,W;UAESD,W;;;KAFTC,W;AAqBNA,WAAW,CAACoB,SAAZ,GAAwB;AACpBnB,EAAAA,IAAI,EAAEH,SAAS,CAACuB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAetB,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst CommentForm = ({post}) => {\r\n    // const [commentText, setCommentText] = useState('');\r\n    const id = useSelector((state)=> state.user.me?.id);\r\n    const [commentText, setCommentText] = useInput('');\r\n    const onChangeCommentText = useCallback((e)=>{\r\n        setCommentText(e.target.value);\r\n    });\r\n    const onSubmitComment = useCallback(\r\n        () => {\r\n            console.log(post.id, commentText);\r\n        },\r\n        [commentText])\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n             <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CommentForm\r\n"]},"metadata":{},"sourceType":"module"}