{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ian07\\\\Desktop\\\\reactSNS\\\\prepare\\\\front\\\\components\\\\LoginForm.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-top: 10px\\n\"]))); // const style = useMemo(()=>({marginTop: 10}), []); -> 스타일 컴포넌트 대신 사용 \n\n_c = ButtonWrapper;\n\nvar LoginForm = function LoginForm(props) {\n  _s();\n\n  var _useState = useState(''),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1]; //컴포넌트의 함수로 넘겨주는 props는 useCallBack(함수캐싱) 꼭쓰기-> 최적화를 위해\n\n\n  var onChangeId = useCallback(function (e) {\n    setId(e.target.value);\n  }, []);\n  var onChangePassword = useCallback(function (e) {\n    setPassword(e.target.value);\n  }, []); //submit이 완료되면 onFinish 가 호출됨 antd의 onFinish는 자동으로 e.preventDefault가 설정되어 있음\n\n  var onSubmitForm = useCallback(function () {\n    // e.preventDefault antd에서 생략\n    // component에 넣는 거니까 useCallback으로 감싸기\n    console.log(id, password);\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"userId\",\n          value: id,\n          onChange: onChangeId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: false,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 45\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n};\n\n_s(LoginForm, \"71+HE8XHzYDzU9jR9aPFdEuC8MA=\");\n\n_c2 = LoginForm;\nLoginForm.propTypes = {};\nexport default LoginForm;\n/*\r\n리렌더링 ->컴포넌트 안 함수가 \r\n처음부터 끝까지 다시 실행되는 것은 맞으나 전체가 다시 그려지는게 아니라(useCallback, memo 등등 제외- 배열값이 바꾸지 않는한)\r\n리턴 부분에서 바뀐 부분만 다시 그리는 것\r\n리턴 부분이 버츄얼 돔 -> 이전과 비교해서 달라진 부분만 다시 그려주는 것\r\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/ian07/Desktop/reactSNS/prepare/front/components/LoginForm.js"],"names":["React","useState","PropTypes","Form","Input","Button","Link","styled","ButtonWrapper","div","LoginForm","props","id","setId","password","setPassword","onChangeId","useCallback","e","target","value","onChangePassword","onSubmitForm","console","log","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px\r\n`;\r\n// const style = useMemo(()=>({marginTop: 10}), []); -> 스타일 컴포넌트 대신 사용 \r\n\r\nconst LoginForm = (props) => {\r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n \r\n //컴포넌트의 함수로 넘겨주는 props는 useCallBack(함수캐싱) 꼭쓰기-> 최적화를 위해\r\n    \r\n    const onChangeId = useCallback((e) => {\r\n            setId(e.target.value);\r\n        },[]);\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    },[]);\r\n    //submit이 완료되면 onFinish 가 호출됨 antd의 onFinish는 자동으로 e.preventDefault가 설정되어 있음\r\n    const onSubmitForm = useCallback(() =>{\r\n        // e.preventDefault antd에서 생략\r\n        // component에 넣는 거니까 useCallback으로 감싸기\r\n        console.log(id, password)\r\n    }, [id, password]);\r\n\r\n    return (\r\n        <>\r\n          <Form onFinish = {onSubmitForm}>\r\n              <div>\r\n                  <label htmlFor = \"user-id\">아이디</label>\r\n                  <br />\r\n                  <Input name = \"userId\" value = {id} onChange = {onChangeId} required />\r\n              </div>\r\n              <div>\r\n                  <label htmlFor = \"user-password\">비밀번호</label>\r\n                  <br />\r\n                  <Input \r\n                    name = \"user-password\" \r\n                    type = \"password\"\r\n                    value = {password} \r\n                    onChange = {onChangePassword} \r\n                    required \r\n                    />\r\n              </div>\r\n              <ButtonWrapper>\r\n                {/* <div style = {style}> 이렇게하면 useMemo 사용*/}\r\n                {/* <div style = {{marginTop : 10}}> 이렇게하면 {} === {} false로 달라진게 없는데 리렌더링 됨*/}\r\n                  <Button type = \"primary\" htmlType = \"submit\" loading = {false}>로그인</Button>\r\n                  <Link href = \"/signup\"><a><Button>회원가입</Button></a></Link>\r\n              </ButtonWrapper>\r\n          </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n\r\n}\r\n\r\nexport default LoginForm\r\n\r\n/*\r\n리렌더링 ->컴포넌트 안 함수가 \r\n처음부터 끝까지 다시 실행되는 것은 맞으나 전체가 다시 그려지는게 아니라(useCallback, memo 등등 제외- 배열값이 바꾸지 않는한)\r\n리턴 부분에서 바뀐 부분만 다시 그리는 것\r\n리턴 부분이 버츄얼 돔 -> 이전과 비교해서 달라진 부분만 다시 그려주는 것\r\n*/"]},"metadata":{},"sourceType":"module"}