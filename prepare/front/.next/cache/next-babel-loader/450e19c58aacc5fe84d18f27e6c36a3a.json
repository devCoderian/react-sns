{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer; //이전 상태와 액션을 통해 다른 상태를 리턴하는 함수\n//(이전 상태, 액션) => 다음 상태\n// const rootReducer = (state = initialState, action) =>{\n//     switch(action.type){\n//         case 'LOG_IN':\n//             return {\n//                 ...state,\n//                 user:{\n//                     ...state.user,\n//                     isLoggedIn: true,\n//                     user: action.data,\n//                 }\n//             };\n//         case 'LOG_OUT':\n//             return {\n//                 ...state,\n//                 user:{\n//                     ...state.user,\n//                     isLoggedIn: false,\n//                     user: null,\n//                 }\n//             };\n//         default:\n//             return state;\n//     }\n// }\n// export default rootReducer;\n// //이전 상태와 액션을 통해 다른 상태를 리턴하는 함수\n// //(이전 상태, 액션) => 다음 상태\n// const rootReducer = (state = initialState, action) =>{\n//     switch(action.type){\n//         case 'LOG_IN':\n//             return {\n//                 ...state,\n//                 user:{\n//                     ...state.user,\n//                     isLoggedIn: true,\n//                     user: action.data,\n//                 }\n//             };\n//         case 'LOG_OUT':\n//             return {\n//                 ...state,\n//                 user:{\n//                     ...state.user,\n//                     isLoggedIn: false,\n//                     user: null,\n//                 }\n//             };\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"sources":["C:/Users/ian07/Desktop/reactSNS/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,WAAW,GAAGH,eAAe,CAAC;AAClCI,EAAAA,KAAK,EAAE,iBAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC7B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKR,OAAL;AACES,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACF;AACE,eAAOL,KAAP;AALJ;AAOD,GATiC;AAUlCJ,EAAAA,IAAI,EAAJA,IAVkC;AAWlCC,EAAAA,IAAI,EAAJA;AAXkC,CAAD,CAAnC;AAcA,eAAeC,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nconst rootReducer = combineReducers({\r\n  index: (state = {}, action) => {\r\n    switch (action.type) {\r\n      case HYDRATE:\r\n        console.log('HYDRATE', action);\r\n        return { ...state, ...action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  user,\r\n  post,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n//이전 상태와 액션을 통해 다른 상태를 리턴하는 함수\r\n//(이전 상태, 액션) => 다음 상태\r\n// const rootReducer = (state = initialState, action) =>{\r\n//     switch(action.type){\r\n//         case 'LOG_IN':\r\n//             return {\r\n//                 ...state,\r\n//                 user:{\r\n//                     ...state.user,\r\n//                     isLoggedIn: true,\r\n//                     user: action.data,\r\n//                 }\r\n//             };\r\n//         case 'LOG_OUT':\r\n//             return {\r\n//                 ...state,\r\n//                 user:{\r\n//                     ...state.user,\r\n//                     isLoggedIn: false,\r\n//                     user: null,\r\n//                 }\r\n//             };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default rootReducer;\r\n\r\n\r\n\r\n// //이전 상태와 액션을 통해 다른 상태를 리턴하는 함수\r\n// //(이전 상태, 액션) => 다음 상태\r\n// const rootReducer = (state = initialState, action) =>{\r\n//     switch(action.type){\r\n//         case 'LOG_IN':\r\n//             return {\r\n//                 ...state,\r\n//                 user:{\r\n//                     ...state.user,\r\n//                     isLoggedIn: true,\r\n//                     user: action.data,\r\n//                 }\r\n//             };\r\n//         case 'LOG_OUT':\r\n//             return {\r\n//                 ...state,\r\n//                 user:{\r\n//                     ...state.user,\r\n//                     isLoggedIn: false,\r\n//                     user: null,\r\n//                 }\r\n//             };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}