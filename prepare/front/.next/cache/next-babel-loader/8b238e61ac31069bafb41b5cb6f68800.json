{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goman\\\\Desktop\\\\react-sns\\\\prepare\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostRequestAction } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostForm = () => {\n  const {\n    imagePaths,\n    postAdded\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  useEffect(() => {\n    if (addPostDone) {\n      setText(''); //따로 안만들면 서브밋하고 서버 오류날때 쓰던 글 지워짐\n    }\n  }, [addPostDone]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPostRequestAction(text));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uBB50\\uB77C\\uC801\\uC9C0\\u3163\\u3163\\u3163?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'http://localhost:3065/' + v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/components/PostForm.js"],"names":["React","useRef","useCallback","useState","useEffect","Form","Input","Button","useDispatch","useSelector","addPostRequestAction","PostForm","imagePaths","postAdded","state","post","text","setText","dispatch","imageInput","addPostDone","onClickImageUpload","current","click","onChangeText","e","target","value","onSubmit","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addPostRequestAction } from '../reducers/post';\r\n\r\nexport const PostForm = () => {\r\n    const { imagePaths, postAdded } = useSelector(state => state.post);\r\n    const [text, setText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n  \r\n    useEffect(()=>{\r\n      if(addPostDone){\r\n        \r\n      setText(''); //따로 안만들면 서브밋하고 서버 오류날때 쓰던 글 지워짐\r\n      }\r\n    },[addPostDone])\r\n    const onClickImageUpload = useCallback(() => {\r\n      imageInput.current.click();\r\n    }, [imageInput.current]);\r\n  \r\n  \r\n    const onChangeText = useCallback((e) => {\r\n      setText(e.target.value);\r\n    }, []);\r\n  \r\n    const onSubmit = useCallback(() => {\r\n      dispatch(addPostRequestAction(text));\r\n      \r\n    }, [text]);\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n        <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"뭐라적지ㅣㅣㅣ?\" />\r\n        <div>\r\n          <input type=\"file\" multiple hidden ref={imageInput} />\r\n          <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n          <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">업로드</Button>\r\n        </div>\r\n        <div>\r\n          {imagePaths.map((v) => {\r\n            return (\r\n              <div key={v} style={{ display: 'inline-block' }}>\r\n                <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\r\n                <div>\r\n                  <Button>제거</Button>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}