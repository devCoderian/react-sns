{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\goman\\\\Desktop\\\\react-sns\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, addPostRequestAction } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { addPost } from '../sagas/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      postAdded = _useSelector.postAdded; // const [text, setText] = useState('');\n  // useInput으로 변경\n\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostDone = _useSelector2.addPostDone;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(''); // 따로 안만들면 서브밋하고 서버 오류날때 쓰던 글 지워짐\n    }\n  }, [addPostDone]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]); // const onChangeText = useCallback((e) => {\n  //   setText(e.target.value);\n  // }, []);\n\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    }); // dispatch(addPostRequestAction(text));\n    // // setText('') 따로 빼기\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uBB50\\uB77C\\uC801\\uC9C0\\u3163\\u3163\\u3163?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'http://localhost:3065/' + v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"JT9aakLnmxN/2Bvw2P+e/dbdfNs=\", false, function () {\n  return [useSelector, useInput, useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/components/PostForm.js"],"names":["React","useRef","useCallback","useEffect","Form","Input","Button","useDispatch","useSelector","ADD_POST_REQUEST","addPostRequestAction","useInput","addPost","PostForm","state","post","imagePaths","postAdded","text","onChangeText","setText","dispatch","imageInput","addPostDone","onClickImageUpload","current","click","onSubmit","type","data","margin","map","v","display","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAC1B,qBAAkCL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA7C;AAAA,MAAQC,UAAR,gBAAQA,UAAR;AAAA,MAAoBC,SAApB,gBAAoBA,SAApB,CAD0B,CAE1B;AACA;;;AACA,kBAAsCN,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,YAAb;AAAA,MAA2BC,OAA3B;;AACA,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,MAAMe,UAAU,GAAGrB,MAAM,EAAzB;;AACA,sBAAwBO,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAnC;AAAA,MAAQQ,WAAR,iBAAQA,WAAR;;AACFpB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,WAAJ,EAAiB;AACfH,MAAAA,OAAO,CAAC,EAAD,CAAP,CADe,CACF;AACd;AACA,GAJM,EAIL,CAACG,WAAD,CAJK,CAAT;AAKE,MAAMC,kBAAkB,GAAGtB,WAAW,CAAC,YAAM;AAC3CoB,IAAAA,UAAU,CAACG,OAAX,CAAmBC,KAAnB;AACD,GAFqC,EAEnC,CAACJ,UAAU,CAACG,OAAZ,CAFmC,CAAtC,CAb0B,CAkB1B;AACA;AACA;;AAEF,MAAME,QAAQ,GAAGzB,WAAW,CAAC,YAAM;AACjCmB,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEnB,gBADC;AAEPoB,MAAAA,IAAI,EAAEX;AAFC,KAAD,CAAR,CADiC,CAKjC;AACA;AACD,GAP2B,EAOzB,CAACA,IAAD,CAPyB,CAA5B;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAwC,IAAA,OAAO,EAAC,qBAAhD;AAAsE,IAAA,QAAQ,EAAEH,QAAhF;AAAA,4BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,EAAET,IAAvB;AAA6B,MAAA,QAAQ,EAAEC,YAAvC;AAAqD,MAAA,SAAS,EAAE,GAAhE;AAAqE,MAAA,WAAW,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAE,mBAAO;AAAT,SAA9B;AAAkD,QAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAOE;AAAA,gBACGR,UAAU,CAACe,GAAX,CAAe,UAACC,CAAD;AAAA,4BACd;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAApB;AAAA,kCACE;AAAK,YAAA,GAAG,EAAE,2BAA2BD,CAArC;AAAwC,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAA/C;AAAmE,YAAA,GAAG,EAAEF;AAAxE;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,iBADc;AAAA,OAAf;AADH;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CAlDM;;GAAMnB,Q;UACyBL,W,EAGIG,Q,EACrBJ,W,EAEOC,W;;;KAPfK,Q;AAoDb,eAAeA,QAAf","sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ADD_POST_REQUEST, addPostRequestAction } from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nimport { addPost } from '../sagas/post'\r\n\r\nexport const PostForm = () => {\r\n    const { imagePaths, postAdded } = useSelector((state) => state.post);\r\n    // const [text, setText] = useState('');\r\n    // useInput으로 변경\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const { addPostDone } = useSelector((state) => state.post);  \r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(''); // 따로 안만들면 서브밋하고 서버 오류날때 쓰던 글 지워짐\r\n    }\r\n    },[addPostDone]);\r\n    const onClickImageUpload = useCallback(() => {\r\n      imageInput.current.click();\r\n    }, [imageInput.current]);\r\n  \r\n  \r\n    // const onChangeText = useCallback((e) => {\r\n    //   setText(e.target.value);\r\n    // }, []);\r\n  \r\n  const onSubmit = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: text,\r\n    });\r\n    // dispatch(addPostRequestAction(text));\r\n    // // setText('') 따로 빼기\r\n  }, [text]);\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"뭐라적지ㅣㅣㅣ?\" />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">업로드</Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: 'inline-block' }}>\r\n            <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}