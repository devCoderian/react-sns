{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goman\\\\Desktop\\\\react-sns\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState, useInput } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  // const [commentText, setCommentText] = useState('');\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useInput('');\n  const dispacth = useDispatch();\n  const onChangeCommentText = useCallback(e => {\n    setCommentText(e.target.value);\n  });\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId,\n        id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","commentText","setCommentText","dispacth","onChangeCommentText","e","target","value","onSubmitComment","console","log","dispatch","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B;AACA,QAAMC,EAAE,GAAGJ,WAAW,CAAEK,KAAD;AAAA;;AAAA,6BAAUA,KAAK,CAACC,IAAN,CAAWC,EAArB,mDAAU,eAAeH,EAAzB;AAAA,GAAD,CAAtB;AACA,QAAM;AAAA,OAACI,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,mBAAmB,GAAGhB,WAAW,CAAEiB,CAAD,IAAK;AACzCH,IAAAA,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,CAAvC;AAGA,QAAMC,eAAe,GAAGpB,WAAW,CAC/B,MAAM;AACFqB,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACAU,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAElB,mBADD;AAELmB,MAAAA,IAAI,EAAC;AAACC,QAAAA,OAAO,EAAEb,WAAV;AAAuBc,QAAAA,MAAM,EAAEnB,IAAI,CAACC,EAApC;AAAwCmB,QAAAA,MAAxC;AAAgDnB,QAAAA;AAAhD;AAFA,KAAD,CAAR;AAIH,GAP8B,EAQ/B,CAACI,WAAD,EAAcJ,EAAd,CAR+B,CAAnC;AASA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,eAAhB;AAAA,2BACK,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAES,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACG,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEjB,WAAhC;AAA6C,QAAA,QAAQ,EAAEG;AAAvD;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEa,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzBD;;AA0BAzB,WAAW,CAAC0B,SAAZ,GAAwB;AACpBzB,EAAAA,IAAI,EAAEL,SAAS,CAAC+B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe5B,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useState, useInput} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post}) => {\r\n    // const [commentText, setCommentText] = useState('');\r\n    const id = useSelector((state)=> state.user.me?.id);\r\n    const [commentText, setCommentText] = useInput('');\r\n    const dispacth = useDispatch();\r\n    const onChangeCommentText = useCallback((e)=>{\r\n        setCommentText(e.target.value);\r\n    });\r\n    const onSubmitComment = useCallback(\r\n        () => {\r\n            console.log(post.id, commentText);\r\n            dispatch({\r\n                type: ADD_COMMENT_REQUEST,\r\n                data:{content: commentText, postId: post.id, userId, id}\r\n            });\r\n        },\r\n        [commentText, id])\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n             <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CommentForm\r\n"]},"metadata":{},"sourceType":"module"}