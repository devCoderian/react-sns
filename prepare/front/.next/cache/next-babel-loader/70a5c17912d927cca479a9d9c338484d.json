{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '정이안'\n    },\n    content: '첫 번째 게시글 #해시태그 #테스트 #안녕',\n    Images: [{\n      // src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n      src: 'https://user-images.githubusercontent.com/87194565/133585873-7ac6d6f5-a7d0-4272-8d67-c022c83c53cf.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'ian'\n      },\n      content: 'ㄱㅇㅇ'\n    }, {\n      User: {\n        nickname: 'jungian'\n      },\n      content: '귀여워...'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: false,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: false\n};\n\nconst dummyPost = data => ({\n  id: 2,\n  content: data,\n  User: {\n    id: 1,\n    nickname: '정이안'\n  },\n  Images: [],\n  Comments: []\n});\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPostRequestAction = data => {\n  type: ADD_POST_REQUEST, data;\n}; // export const addCommentRequestAction = (data) => {\n//   type: ADD_COMMENT_REQUEST,\n//   data\n// };\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: true,\n          addPostDone: false,\n          addPostError: null\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost(action.data), ...state.mainPosts],\n          addPostLoading: false,\n          addPostDone: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostDone: false,\n          addPostError: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentDone: false,\n          addCommentError: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","dummyPost","data","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostRequestAction","type","state","action","error"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: '정이안',\r\n      },\r\n      content: '첫 번째 게시글 #해시태그 #테스트 #안녕',\r\n      Images: [{\r\n        // src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        src:'https://user-images.githubusercontent.com/87194565/133585873-7ac6d6f5-a7d0-4272-8d67-c022c83c53cf.jpg',\r\n      }, {\r\n        src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n      }, {\r\n        src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n      }],\r\n      Comments: [{\r\n        User: {\r\n          nickname: 'ian',\r\n        },\r\n        content: 'ㄱㅇㅇ',\r\n      }, {\r\n        User: {\r\n          nickname: 'jungian',\r\n        },\r\n        content: '귀여워...',\r\n      }]\r\n    }],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: false,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: false,\r\n  };\r\n    \r\n  const dummyPost = (data) => ({\r\n    id: 2,\r\n    content: data,\r\n    User: {\r\n      id: 1,\r\n      nickname: '정이안',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n  });\r\n  \r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n    \r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n  \r\n  export const addPostRequestAction = (data) => {\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n  };\r\n\r\n  // export const addCommentRequestAction = (data) => {\r\n  //   type: ADD_COMMENT_REQUEST,\r\n  //   data\r\n  // };\r\n\r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST: {\r\n        return {\r\n          ...state,\r\n          addPostLoading:true,\r\n          addPostDone:false,\r\n          addPostError: null\r\n        };\r\n      }\r\n      case ADD_POST_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n          addPostLoading:false,\r\n          addPostDone:true,\r\n      }\r\n    }\r\n      case ADD_POST_FAILURE: {\r\n        return {\r\n          ...state,\r\n          addPostDone:false,\r\n          addPostError:action.error\r\n        };\r\n      }\r\n      case ADD_COMMENT_REQUEST: {\r\n        return {\r\n          ...state,\r\n          addCommentLoading:true,\r\n          addCommentDone:false,\r\n          addCommentError: null\r\n        };\r\n      }\r\n      case ADD_COMMENT_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          addCommentLoading:false,\r\n          addCommentDone:true,\r\n      }\r\n    }\r\n      case ADD_COMMENT_FAILURE: {\r\n        return {\r\n          ...state,\r\n          addCommentDone:false,\r\n          addCommentError:action.error\r\n        };\r\n      }\r\n      default: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}