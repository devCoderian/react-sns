{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goman\\\\Desktop\\\\react-sns\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      postAdded = _useSelector.postAdded;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n    setText('');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uBB50\\uB77C\\uC801\\uC9C0\\u3163\\u3163\\u3163?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'http://localhost:3065/' + v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"m1sX99y2LcsJ2LdYm/DiaGvHBfc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/components/PostForm.js"],"names":["React","useRef","useCallback","useState","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","PostForm","state","post","imagePaths","postAdded","text","setText","dispatch","imageInput","onClickImageUpload","current","click","onChangeText","e","target","value","onSubmit","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addPost } from '../reducers/post';\r\n\r\nexport const PostForm = () => {\r\n    const { imagePaths, postAdded } = useSelector(state => state.post);\r\n    const [text, setText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n  \r\n    const onClickImageUpload = useCallback(() => {\r\n      imageInput.current.click();\r\n    }, [imageInput.current]);\r\n  \r\n  \r\n    const onChangeText = useCallback((e) => {\r\n      setText(e.target.value);\r\n    }, []);\r\n  \r\n    const onSubmit = useCallback(() => {\r\n      dispatch(addPost);\r\n      setText('');\r\n    }, []);\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n        <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"뭐라적지ㅣㅣㅣ?\" />\r\n        <div>\r\n          <input type=\"file\" multiple hidden ref={imageInput} />\r\n          <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n          <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">업로드</Button>\r\n        </div>\r\n        <div>\r\n          {imagePaths.map((v) => {\r\n            return (\r\n              <div key={v} style={{ display: 'inline-block' }}>\r\n                <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\r\n                <div>\r\n                  <Button>제거</Button>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}