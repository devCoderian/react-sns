{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '정이안'\n    },\n    content: '첫 번째 게시글 #해시태그 #테스트 #안녕',\n    Images: [{\n      // src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n      src: 'https://user-images.githubusercontent.com/87194565/133585873-7ac6d6f5-a7d0-4272-8d67-c022c83c53cf.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'ian'\n      },\n      content: 'ㄱㅇㅇ'\n    }, {\n      User: {\n        nickname: 'jungian'\n      },\n      content: '귀여워...'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: false\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '정이안'\n  },\n  Images: [],\n  Comments: []\n};\nvar ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nvar ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nvar ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nvar ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nvar ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nvar ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  type: ADD_POST_REQUEST, data;\n};\nexport var addComment = function addComment(data) {\n  type: ADD_COMMENT_REQUEST, data;\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","dummyPost","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","state","action","postAdded"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CAAC;AACVC,IAAAA,EAAE,EAAE,CADM;AAEVC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFI;AAMVC,IAAAA,OAAO,EAAE,yBANC;AAOVC,IAAAA,MAAM,EAAE,CAAC;AACP;AACAC,MAAAA,GAAG,EAAC;AAFG,KAAD,EAGL;AACDA,MAAAA,GAAG,EAAE;AADJ,KAHK,EAKL;AACDA,MAAAA,GAAG,EAAE;AADJ,KALK,CAPE;AAeVC,IAAAA,QAAQ,EAAE,CAAC;AACTL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADG;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAD,EAKP;AACDF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADL;AAIDC,MAAAA,OAAO,EAAE;AAJR,KALO;AAfA,GAAD,CADa;AA4BxBI,EAAAA,UAAU,EAAE,EA5BY;AA6BxBC,EAAAA,cAAc,EAAE,KA7BQ;AA8BxBC,EAAAA,WAAW,EAAE,KA9BW;AA+BxBC,EAAAA,YAAY,EAAE;AA/BU,CAArB;AAkCL,IAAMC,SAAS,GAAG;AAChBX,EAAAA,EAAE,EAAE,CADY;AAEhBG,EAAAA,OAAO,EAAE,WAFO;AAGhBF,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBE,EAAAA,MAAM,EAAE,EAPQ;AAQhBE,EAAAA,QAAQ,EAAE;AARM,CAAlB;AAWA,IAAMM,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AAGA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC/BC,EAAAA,IAAI,EAAER,gBAAgB,EACtBO,IADM;AAEP,CAHM;AAKP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACF,IAAD,EAAU;AAClCC,EAAAA,IAAI,EAAEL,mBAAmB,EACzBI,IADM;AAEP,CAHM;AAKP,gBAAe,YAAkC;AAAA,MAAjCG,KAAiC,uEAAzBxB,YAAyB;AAAA,MAAXyB,MAAW;;AAC/C,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKR,gBAAL;AAAuB;AACrB,+CACKU,KADL;AAEEvB,UAAAA,SAAS,GAAGY,SAAH,4BAAiBW,KAAK,CAACvB,SAAvB,EAFX;AAGEyB,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,SAAKX,gBAAL;AAAuB;AACrB,+CACKS,KADL;AAEEvB,UAAAA,SAAS,GAAGY,SAAH,4BAAiBW,KAAK,CAACvB,SAAvB,EAFX;AAGEyB,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,SAAKV,gBAAL;AAAuB;AACrB,+CACKQ,KADL;AAEEvB,UAAAA,SAAS,GAAGY,SAAH,4BAAiBW,KAAK,CAACvB,SAAvB,EAFX;AAGEyB,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD;AAAS;AACP,iCACKF,KADL;AAGD;AA1BH;AA4BD,CA7BD","sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: '정이안',\r\n      },\r\n      content: '첫 번째 게시글 #해시태그 #테스트 #안녕',\r\n      Images: [{\r\n        // src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        src:'https://user-images.githubusercontent.com/87194565/133585873-7ac6d6f5-a7d0-4272-8d67-c022c83c53cf.jpg',\r\n      }, {\r\n        src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n      }, {\r\n        src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n      }],\r\n      Comments: [{\r\n        User: {\r\n          nickname: 'ian',\r\n        },\r\n        content: 'ㄱㅇㅇ',\r\n      }, {\r\n        User: {\r\n          nickname: 'jungian',\r\n        },\r\n        content: '귀여워...',\r\n      }]\r\n    }],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: false,\r\n  };\r\n    \r\n  const dummyPost = {\r\n    id: 2,\r\n    content: '더미데이터입니다.',\r\n    User: {\r\n      id: 1,\r\n      nickname: '정이안',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n  };\r\n  \r\n  const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\n  const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\n  const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n    \r\n  const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\n  const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\n  const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n  \r\n  export const addPost = (data) => {\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n  };\r\n\r\n  export const addComment = (data) => {\r\n    type: ADD_COMMENT_REQUEST,\r\n    data\r\n  };\r\n\r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST: {\r\n        return {\r\n          ...state,\r\n          mainPosts: [dummyPost, ...state.mainPosts],\r\n          postAdded: true,\r\n        };\r\n      }\r\n      case ADD_POST_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          mainPosts: [dummyPost, ...state.mainPosts],\r\n          postAdded: true,\r\n        };\r\n      }\r\n      case ADD_POST_FAILURE: {\r\n        return {\r\n          ...state,\r\n          mainPosts: [dummyPost, ...state.mainPosts],\r\n          postAdded: true,\r\n        };\r\n      }\r\n      default: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}