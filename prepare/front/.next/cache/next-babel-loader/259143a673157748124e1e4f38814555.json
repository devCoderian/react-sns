{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goman\\\\Desktop\\\\react-sns\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState, useInput, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  // const [commentText, setCommentText] = useState('');\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      commentText = _useInput[0],\n      onChangeCommentText = _useInput[1],\n      setCommentText = _useInput[2];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText(''); //따로 안만들면 서브밋하고 서버 오류날때 쓰던 글 지워짐\n    }\n  }, [addCommentDone]); // const onChangeCommentText = useCallback((e)=>{\n  //     setCommentText(e.target.value);\n  // });\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"v9Kq+W8AYu5/n3EPr6rxuwGdNg0=\", false, function () {\n  return [useSelector, useInput, useDispatch, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-sns/prepare/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useInput","useEffect","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","setCommentText","dispatch","addCommentDone","onSubmitComment","console","log","type","data","content","userId","postId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAiE,OAAjE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC5B;AACA,MAAMC,EAAE,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,6BAAUA,KAAK,CAACC,IAAN,CAAWC,EAArB,mDAAU,eAAeH,EAAzB;AAAA,GAAD,CAAtB;;AACA,kBAA2DR,QAAQ,CAAC,EAAD,CAAnE;AAAA,MAAOY,WAAP;AAAA,MAAoBC,mBAApB;AAAA,MAAyCC,cAAzC;;AACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,qBAA2BC,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACF,IAAjB;AAAA,GAAD,CAAtC;AAAA,MAAQS,cAAR,gBAAQA,cAAR;;AACAf,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGe,cAAH,EAAkB;AACdF,MAAAA,cAAc,CAAC,EAAD,CAAd,CADc,CACM;AACvB;AACF,GAJM,EAIL,CAACE,cAAD,CAJK,CAAT,CAN4B,CAY5B;AACA;AACA;;AACA,MAAMC,eAAe,GAAGnB,WAAW,CAC/B,YAAM;AACFoB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACAG,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEf,mBADD;AAELgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEV,WAAX;AAAwBW,QAAAA,MAAM,EAAEf,EAAhC;AAAoCgB,QAAAA,MAAM,EAAEjB,IAAI,CAACC;AAAjD;AAFD,KAAD,CAAR;AAIH,GAP8B,EAQ/B,CAACI,WAAD,EAAcJ,EAAd,CAR+B,CAAnC;AASA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA,2BACK,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACG,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEd,WAAhC;AAA6C,QAAA,QAAQ,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,eADH,eAEG,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEY,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAhCD;;GAAMtB,W;UAESF,W,EACgDJ,Q,EAC1CG,W,EACUC,W;;;KALzBE,W;AAiCNA,WAAW,CAACuB,SAAZ,GAAwB;AACpBtB,EAAAA,IAAI,EAAEL,SAAS,CAAC4B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAezB,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useState, useInput, useEffect} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post}) => {\r\n    // const [commentText, setCommentText] = useState('');\r\n    const id = useSelector((state)=> state.user.me?.id);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n    const dispatch = useDispatch();\r\n    const { addCommentDone } = useSelector((state) => state.post);\r\n    useEffect(()=>{\r\n        if(addCommentDone){\r\n            setCommentText(''); //따로 안만들면 서브밋하고 서버 오류날때 쓰던 글 지워짐\r\n        }\r\n      },[addCommentDone])\r\n\r\n    // const onChangeCommentText = useCallback((e)=>{\r\n    //     setCommentText(e.target.value);\r\n    // });\r\n    const onSubmitComment = useCallback(\r\n        () => {\r\n            console.log(post.id, commentText);\r\n            dispatch({\r\n                type: ADD_COMMENT_REQUEST,\r\n                data: { content: commentText, userId: id, postId: post.id },\r\n            });\r\n        },\r\n        [commentText, id])\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n             <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CommentForm\r\n"]},"metadata":{},"sourceType":"module"}